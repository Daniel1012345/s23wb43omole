{"version":3,"sources":["musical.js"],"names":["Musical","require","exports","musical_detail","req","res","console","log","params","id","findById","result","send","status","musical_create_post","document","instrument_type","body","brand","cost","save","musical_delete","musical_update_put","JSON","stringify","toUpdate","muscial_type","musical_type","size","checkboxsale","sale","same","musical_list","find","themusical","musical_view_all_Page","render","title","results"],"mappings":"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","sourcesContent":["var Musical = require('../models/musical');\r\n\r\nexports.musical_detail = async function(req, res) {\r\n    console.log(\"detail\" + req.params.id)\r\n    try {\r\n        const result = await Musical.findById( req.params.id)\r\n        res.send(result)\r\n    } catch (error) {\r\n        res.status(500)\r\n        res.send(`{\"error\": document for id ${req.params.id} not found`);\r\n    }\r\n\r\n};\r\n\r\nexports.musical_create_post = async function(req, res) {\r\n    let document = new Musical();\r\n// We are looking for a body, since POST does not have query parameters.\r\n// Even though bodies can be in many different formats, we will be picky\r\n// and require that it be a json object\r\n// {\"costume_type\":\"goat\", \"cost\":12, \"size\":\"large\"}\r\n    document.instrument_type = req.body.instrument_type;\r\n    document.brand = req.body.brand;\r\n    document.cost = req.body.cost;\r\n    try{\r\n        let result = await document.save();\r\n        res.send(result);\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }\r\n};\r\n\r\n\r\n\r\nexports.musical_delete = function(req, res) {\r\n    res.send('NOT IMPLEMENTED: Musical delete DELETE ' + req.params.id);\r\n};\r\n\r\nexports.musical_update_put = async function(req, res) {\r\n    console.log(`update on id ${req.params.id} with body ${JSON.stringify(req.body)}`)\r\n    try {\r\n        let toUpdate = await musical_update_put.findById( req.params.id)\r\n        // Do updates of properties\r\n        if(req.body.muscial_type)\r\n            toUpdate.musical_type = req.body.musical_type;\r\n        if(req.body.cost) toUpdate.cost = req.body.cost;\r\n        if(req.body.size) toUpdate.size = req.body.size;\r\n        if(req.body.checkboxsale) toUpdate.sale = true;\r\n        else toUpdate.same = false;\r\n        let result = await toUpdate.save();\r\n        console.log(\"Sucess \" + result)\r\n        res.send(result)\r\n    } catch (err) {\r\n        res.status(500)\r\n        res.send(`{\"error\": ${err}: Update for id ${req.params.id} failed`);\r\n    }\r\n};\r\n\r\n\r\n// List of all Musicals\r\nexports.musical_list = async function(req, res) {\r\n    try{\r\n        themusical = await Musical.find();\r\n        res.send(themusical);\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }\r\n};\r\n\r\n// VIEWS\r\n// Handle a show all view\r\nexports.musical_view_all_Page = async function(req, res) {\r\n    try{\r\n        themusical = await Musical.find();\r\n        res.render('musical', { title: 'Musical Search Results', results: themusical });\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }\r\n};\r\n"],"file":"musical.dev.js"}