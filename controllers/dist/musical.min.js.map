{"version":3,"sources":["musical.js"],"names":["Musical","require","exports","req","res","result","regeneratorRuntime","async","_context","prev","next","console","log","params","id","awrap","findById","sent","send","t0","status","concat","stop","musical_create_post","document","_context2","instrument_type","body","brand","cost","save","musical_update_put","toUpdate","_context3","JSON","stringify","muscial_type","musical_type","size","sale","same","musical_list","_context4","find","themusical","_context5","title","results"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,qBAAtBC,QAAIF,eAAkB,SAAAG,EAAtBC,GAAsB,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAGlBC,QAAQC,IAAI,SAAWT,EAAIU,OAAOC,IAHhBN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAS,MAEGf,QAAAgB,SAAAb,EAAAU,OAAAC,KAFH,KAAA,EAEGT,EAFHG,EAAAS,KAEGb,EAAAc,KAAAb,GAFHG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,MAAA,GAEGJ,EAAAgB,OAAA,KAAAhB,EAAAc,KAAA,6BAAAG,OAAAlB,EAAAU,OAAAC,GAAA,eAFH,KAAA,GAAA,IAAA,MAAA,OAAAN,EAAAc,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MActBpB,QAAQqB,oBAAsB,SAAepB,EAAKC,GAApB,IAAAoB,EAAAnB,EAAA,OAAAC,mBAAAC,MAAA,SAAAkB,GAAA,OAAA,OAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,KAAA,EAAA,OAZLc,EAAA,IAAAxB,SAkBZ0B,gBAAkBvB,EAAIwB,KAAKD,gBAlBfF,EAAAI,MAAAzB,EAAAwB,KAAAC,MAAAJ,EAAAK,KAAA1B,EAAAwB,KAAAE,KAYKJ,EAAAhB,KAAA,EAAAgB,EAAAf,KAAA,EAAAJ,mBAAAS,MANtBS,EAAAM,QAMsB,KAAA,EANtB1B,EAMsBqB,EAAAR,KALtBb,EAAAA,KAAIc,GAKkBO,EAAAf,KAAA,GAAA,MAAA,KAAA,GAAAe,EAAAhB,KAAA,GAAAgB,EAAAN,GAAAM,EAAA,MAAA,GAZLrB,EAAAgB,OAAA,KAAAhB,EAAAc,KAAA,aAAAG,OAAAI,EAAAN,GAAA,MAYK,KAAA,GAAA,IAAA,MAAA,OAAAM,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAA9BpB,QAAQqB,eAAAA,SAAsBpB,EAAAC,GAAAA,EAAAc,KAAA,0CAAAf,EAAAU,OAAAC,KAAAZ,QAAA6B,mBAAA,SAAA5B,EAAAC,GAAA,IAAA4B,EAAA3B,EAAA,OAAAC,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,OAAAC,QAAAC,IAAA,gBAAAS,OAAAlB,EAAAU,OAAAC,GAAA,eAAAO,OAAAa,KAAAC,UAAAhC,EAAAwB,QAAAM,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAAAJ,mBAAAS,MAG9BgB,mBAAAf,SAAAb,EAAAU,OAAAC,KAH8B,KAAA,EAAA,OAG9BkB,EAH8BC,EAAAhB,KAK9Bd,EAAAwB,KAAAS,eA0BYJ,EAASK,aAAelC,EAAIwB,KAAKU,cAzBzCb,EAAAA,KAASE,OAAAA,EAATG,KAA+BF,EAAKD,KAAAA,MACpCF,EAAAA,KAASI,OAATI,EAAiBM,KAAjBnC,EAAAwB,KAAAW,MACAd,EAAAA,KAASK,aAAOG,EAAhBO,MAAA,EAR0BP,EAAAQ,MAAA,EAAAP,EAAAvB,KAAA,GAAAJ,mBAAAS,MAAAiB,EAAAF,QAAA,KAAA,GAAAzB,EAAA4B,EAAAhB,KAAAN,QAAAC,IAAA,UAAAP,GAsCtBD,EAAIc,KAAKb,GAtCa4B,EAAAvB,KAAA,GAAA,MAAA,KAAA,GAAAuB,EAAAxB,KAAA,GAAAwB,EAAAd,GAAAc,EAAA,MAAA,GAUlB5B,EAAAA,OAVkB,KAWtBD,EAAAA,KAAAA,aAAAA,OAAAA,EAAAA,GAAAA,oBAAAA,OAAAD,EAAAU,OAAAC,GAAAV,YAXsB,KAAA,GAAA,IAAA,MAAA,OAAA6B,EAAAX,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAApB,QAAAuC,aAAA,SAAAtC,EAAAC,GAAA,OAAAE,mBAAAC,MAAA,SAAAmC,GAAA,OAAA,OAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,KAAA,EAAA,OAAAgC,EAAAjC,KAAA,EAAAiC,EAAAhC,KAAA,EAAAJ,mBAAAS,MAetBf,QAAA2C,QAfsB,KAAA,EAetBvC,WAfsBsC,EAAAzB,KAkDtBb,EAAIc,KAAK0B,YAlDaF,EAAAhC,KAAA,GAAA,MAAA,KAAA,EAAAgC,EAAAjC,KAAA,EAAAiC,EAAAvB,GAAAuB,EAAA,MAAA,GAAAtC,EAAAgB,OAAA,KAAAhB,EAAAc,KAAA,aAAAG,OAAAqB,EAAAvB,GAAA,MAAA,KAAA,GAAA,IAAA,MAAA,OAAAuB,EAAApB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAsB1BlB,QAAIc,sBAAK,SAAAf,EAAAC,GAAA,OAAAE,mBAAAC,MAAA,SAAAsC,GAAA,OAAA,OAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,KAAA,EAAA,OAAAmC,EAAApC,KAAA,EAAAoC,EAAAnC,KAAA,EAAAJ,mBAAAS,MAwCcf,QAAQ2C,QAxCtB,KAAA,EAwCLC,WAxCKC,EAAA5B,KAGLc,EAAAA,OAAAA,UAAqB,CAAAe,MAAA,yBAAAC,QAAAH,aAHhBC,EAAAnC,KAAA,GAAA,MAAA,KAAA,EAAAmC,EAAApC,KAAA,EAAAoC,EAAA1B,GAAA0B,EAAA,MAAA,GAGgBzC,EAAAgB,OAAA,KAAAhB,EAAAc,KAAA,aAAAG,OAAAwB,EAAA1B,GAAA,MAHhB,KAAA,GAAA,IAAA,MAAA,OAAA0B,EAAAvB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"musical.min.js","sourcesContent":["var Musical = require('../models/musical');\r\n\r\nexports.musical_detail = async function(req, res) {\r\n    console.log(\"detail\" + req.params.id)\r\n    try {\r\n        const result = await Musical.findById( req.params.id)\r\n        res.send(result)\r\n    } catch (error) {\r\n        res.status(500)\r\n        res.send(`{\"error\": document for id ${req.params.id} not found`);\r\n    }\r\n\r\n};\r\n\r\nexports.musical_create_post = async function(req, res) {\r\n    let document = new Musical();\r\n// We are looking for a body, since POST does not have query parameters.\r\n// Even though bodies can be in many different formats, we will be picky\r\n// and require that it be a json object\r\n// {\"costume_type\":\"goat\", \"cost\":12, \"size\":\"large\"}\r\n    document.instrument_type = req.body.instrument_type;\r\n    document.brand = req.body.brand;\r\n    document.cost = req.body.cost;\r\n    try{\r\n        let result = await document.save();\r\n        res.send(result);\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }\r\n};\r\n\r\n\r\n\r\nexports.musical_delete = function(req, res) {\r\n    res.send('NOT IMPLEMENTED: Musical delete DELETE ' + req.params.id);\r\n};\r\n\r\nexports.musical_update_put = async function(req, res) {\r\n    console.log(`update on id ${req.params.id} with body ${JSON.stringify(req.body)}`)\r\n    try {\r\n        let toUpdate = await musical_update_put.findById( req.params.id)\r\n        // Do updates of properties\r\n        if(req.body.muscial_type)\r\n            toUpdate.musical_type = req.body.musical_type;\r\n        if(req.body.cost) toUpdate.cost = req.body.cost;\r\n        if(req.body.size) toUpdate.size = req.body.size;\r\n        if(req.body.checkboxsale) toUpdate.sale = true;\r\n        else toUpdate.same = false;\r\n        let result = await toUpdate.save();\r\n        console.log(\"Sucess \" + result)\r\n        res.send(result)\r\n    } catch (err) {\r\n        res.status(500)\r\n        res.send(`{\"error\": ${err}: Update for id ${req.params.id} failed`);\r\n    }\r\n};\r\n\r\n\r\n// List of all Musicals\r\nexports.musical_list = async function(req, res) {\r\n    try{\r\n        themusical = await Musical.find();\r\n        res.send(themusical);\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }\r\n};\r\n\r\n// VIEWS\r\n// Handle a show all view\r\nexports.musical_view_all_Page = async function(req, res) {\r\n    try{\r\n        themusical = await Musical.find();\r\n        res.render('musical', { title: 'Musical Search Results', results: themusical });\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }\r\n};\r\n"]}