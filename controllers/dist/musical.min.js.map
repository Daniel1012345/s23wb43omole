{"version":3,"sources":["musical.js"],"names":["Musical","require","exports","req","res","result","regeneratorRuntime","async","_context","prev","next","console","log","params","id","awrap","findById","sent","send","t0","status","concat","stop","musical_create_post","document","_context2","instrument_type","body","brand","cost","save","musical_update_put","musical_list","_context3","find","musical_view_all_Page","_context4","themusical","render","title","results"],"mappings":"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","file":"musical.min.js","sourcesContent":["var Musical = require('../models/musical');\r\n\r\nexports.musical_detail = async function(req, res) {\r\n    console.log(\"detail\" + req.params.id)\r\n    try {\r\n        const result = await Musical.findById( req.params.id)\r\n        res.send(result)\r\n    } catch (error) {\r\n        res.status(500)\r\n        res.send(`{\"error\": document for id ${req.params.id} not found`);\r\n    }\r\n\r\n};\r\n\r\nexports.musical_create_post = async function(req, res) {\r\n    let document = new Musical();\r\n// We are looking for a body, since POST does not have query parameters.\r\n// Even though bodies can be in many different formats, we will be picky\r\n// and require that it be a json object\r\n// {\"costume_type\":\"goat\", \"cost\":12, \"size\":\"large\"}\r\n    document.instrument_type = req.body.instrument_type;\r\n    document.brand = req.body.brand;\r\n    document.cost = req.body.cost;\r\n    try{\r\n        let result = await document.save();\r\n        res.send(result);\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }\r\n};\r\n\r\n\r\n\r\nexports.musical_delete = function(req, res) {\r\n    res.send('NOT IMPLEMENTED: Musical delete DELETE ' + req.params.id);\r\n};\r\n\r\nexports.musical_update_put = function(req, res) {\r\n    res.send('NOT IMPLEMENTED: Musical update PUT' + req.params.id);\r\n};\r\n\r\n// List of all Musicals\r\nexports.musical_list = async function(req, res) {\r\n    try{\r\n        themusical = await Musical.find();\r\n        res.send(themusical);\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }\r\n};\r\n\r\n// VIEWS\r\n// Handle a show all view\r\nexports.musical_view_all_Page = async function(req, res) {\r\n    try{\r\n        themusical = await Musical.find();\r\n        res.render('musical', { title: 'Musical Search Results', results: themusical });\r\n    }\r\n    catch(err){\r\n        res.status(500);\r\n        res.send(`{\"error\": ${err}}`);\r\n    }\r\n};\r\n"]}