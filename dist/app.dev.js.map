{"version":3,"sources":["app.js"],"names":["createError","require","express","path","cookieParser","logger","config","connectionString","process","env","MONGO_CON","mongoose","connect","useNewUrlParser","useUnifiedTopology","indexRouter","usersRouter","musicalsRouter","boardRouter","gridbuildRouter","selectorRouter","Musicals","resourceRouter","app","db","connection","on","console","error","bind","once","log","set","join","__dirname","use","json","urlencoded","extended","req","res","next","err","locals","message","get","status","render","recreateDB","deleteMany","instance1","instrument_type","brand","cost","instance2","instance3","save","then","doc","reseed","module","exports"],"mappings":"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","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\n\n\n\nrequire('dotenv').config();\nconst connectionString = process.env.MONGO_CON;\nmongoose = require('mongoose');\nmongoose.connect(connectionString,{\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nvar indexRouter = require('./routes/index');\nvar usersRouter = require('./routes/users');\nvar musicalsRouter = require('./routes/musical');\nvar boardRouter = require('./routes/board');\nvar gridbuildRouter = require('./routes/gridbuild');\nvar selectorRouter = require('./routes/selector');\nvar Musicals = require(\"./models/musical\");\nvar resourceRouter = require(\"./routes/resource\");\n\nvar app = express();\n//Get the default connection\nvar db = mongoose.connection;\n//Bind connection to error event\ndb.on('error', console.error.bind(console, 'MongoDB connection error:'));\ndb.once(\"open\", function(){\n  console.log(\"Connection to DB succeeded\")});\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/resource', resourceRouter)\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\napp.use('/musical', musicalsRouter);\napp.use('/board', boardRouter);\napp.use('/gridbuild', gridbuildRouter);\napp.use('/selector', selectorRouter)\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n// We can seed the collection if needed on server start\nasync function recreateDB(){\n// Delete everything\n  await Musicals.deleteMany();\n  let instance1 = new Musicals({instrument_type:\"Guiter\", brand:'Yamaha',cost:25.4});\n  let instance2 = new Musicals({instrument_type:\"Piano\", brand:'Yamaha',cost:250.4});\n  let instance3 = new Musicals({instrument_type:\"Talking drum\", brand:'Sony',cost:200.4});\n\n  \n  instance1.save()\n  .then(doc=> {\n    console.log(\"First object saved\")\n  })\n  .catch(err=>{\n      console.error(err)\n  })\n  instance2.save()\n  .then(doc=> {\n    console.log(\"Second object saved\")\n  })\n  .catch(err=>{\n      console.error(err)\n  })\n  instance3.save()\n  .then(doc=> {\n    console.log(\"Third object saved\")\n  })\n  .catch(err=>{\n      console.error(err)\n  })\n}\nlet reseed = true;\nif (reseed) {recreateDB();}\n\nmodule.exports = app;\n"],"file":"app.dev.js"}